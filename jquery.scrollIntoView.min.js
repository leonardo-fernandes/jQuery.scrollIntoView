/*!
 * $.fn.scrollIntoView - similar to the default browser scrollIntoView
 * The default browser behavior always places the element at the top or bottom of its container. 
 * This override is smart enough to not scroll if the element is already visible.
 *
 * Copyright 2011 Arwid Bancewicz
 * Licensed under the MIT license
 * http://www.opensource.org/licenses/mit-license.php
 * 
 * @date 8 Jan 2013
 * @author Arwid Bancewicz http://arwid.ca
 * @version 0.3
 */
(function(b){var l=function(){var a=[],d=Infinity;b(this).each(function(){var c=b(this).parents();a.push(c);d=Math.min(d,c.length)});for(var c=0;c<a.length;c++)a[c]=a[c].slice(a[c].length-d);for(c=0;c<a[0].length;c++){for(var k=!0,e=0;e<a.length;e++)if(a[e][c]!=a[0][c]){k=!1;break}if(k)return b(a[0][c])}return b([])},m=function(){for(var a=l.call(this).get(0);a;){var d=a.scrollTop;a.scrollTop=d;a.scrollTop++;if(a.scrollTop!=d)return a.scrollTop=d,b(a);a.scrollTop=d;a.scrollTop--;if(a.scrollTop!=d)return a.scrollTop=
d,b(a);a=a.parentNode}return b(window)};b.fn.scrollIntoView=function(a,d,c){function k(a,c){e.smooth?b(a).stop().animate({scrollTop:c},e):(a.scrollTop=c,b.isFunction(e.complete)&&e.complete.call(a))}if(0==this.length)return this;var e=b.extend({},b.fn.scrollIntoView.defaults);"object"==b.type(a)?b.extend(e,a):"number"==b.type(a)?b.extend(e,{duration:a,easing:d,complete:c}):0==a&&(e.smooth=!1);var f=Infinity,g=0;1==this.length?(f=this.offset().top,g=this.height()):(this.each(function(){b(this).offset().top<
f&&(f=b(this).offset().top);b(this).offset().top+b(this).height()>g&&(g=b(this).offset().top+b(this).height())}),g-=f);a=b(window).height();d=m.call(this).get(0);c=d.scrollTop;var h=d.clientHeight;h>a&&(h=a);0==h&&"BODY"==d.tagName&&(h=a);f<=c?k(d,f):f+g>c+h?k(d,f+g-h):b.isFunction(e.complete)&&e.complete.call(el);return this};b.fn.scrollIntoView.defaults={smooth:!0,duration:null,easing:b.easing&&b.easing.easeOutExpo?"easeOutExpo":null,complete:b.noop(),step:null,specialEasing:{}}})(jQuery);
